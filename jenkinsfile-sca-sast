pipeline {
    agent { label 'Azure_linux' }
    environment {
        PATH = "/opt/Fortify/Fortify_SCA_and_Apps_24.2.0/bin/:$PATH"
        Fortify_Upload_Token = credentials('Fortify_Upload_Token_DEV')
        Fortify_Download_Token = credentials('Fortify_Download_Token_DEV')
        BD_TOKEN = credentials('TOKEN')
        newWorkspace = '/home/'
        
        BLACKDUCK_PROJECT_NAME = "TestProject_DEV"
        BLACKDUCK_PROJECT_VERSION = "TestScan_001_DEV"
        BLACKDUCK_DETECT_PATH_JAR = "appsec-scripts/blackduck"
        BLACKDUCK_URL = ""
        BLACKDUCK_TRUST_CERT = "true"
        BLACKDUCK_POLICY_CHECK_FAIL_ON_SEVERITIES = "CRITICAL"
        BLACKDUCK_DETECTOR_SEARCH_EXCLUSION_DEFAULTS = "true"
    }
    stages {
        stage('change Workspace directory') {
            steps {
                script {
                    ws(newWorkspace) {
                        sh 'pwd'
                        sh 'ls'
                        dir("app") {
                            git url: "", credentialsId: ""
                        }
                    }
                }
            }
        }
        stage('build') {
            steps {
                echo 'build'
                dir("app") {
                    git url: "", credentialsId: ""
                }
            }
        }
        stage('blackduck appsec') {
            steps {
                script {
                    echo 'blackduck'
                    dir("appsec-scripts") {
                        git url: "", branch: "purgeps", credentialsId: ""
                    }
                    def blackDuckCommands = """
                        bash blackduck.sh \\
                        --blackduck.project.name="${BLACKDUCK_PROJECT_NAME}" \\
                        --blackduck.project.version="${BLACKDUCK_PROJECT_VERSION}" \\
                        --blackduck.detect.path.jar="${BLACKDUCK_DETECT_PATH_JAR}" \\
                        --blackduck.source.code.path="$WORKSPACE/app" \\
                        --blackduck.url="${BLACKDUCK_URL}" \\
                        --blackduck.client.api.key="${BD_TOKEN}" \\
                        --blackduck.trust.cert=${BLACKDUCK_TRUST_CERT} \\
                        --detect.policy.check.fail.on.severities=${BLACKDUCK_POLICY_CHECK_FAIL_ON_SEVERITIES} \\
                        --detect.detector.search.exclusion.defaults=${BLACKDUCK_DETECTOR_SEARCH_EXCLUSION_DEFAULTS}
                    """
                    sh(script: blackDuckCommands)
                }
            }
        }
    }
}

pipeline {
    agent { label '' }
    environment {
        Fortify_Upload_Token = credentials('Fortify_Upload_Token_DEV')
        Fortify_Download_Token = credentials('Fortify_Download_Token_DEV')
        BD_TOKEN = credentials('BD_DEV_TOKEN')
        FORTIFY_DEV_USER_TOKEN = credentials('FORTIFY_DEV_USER_TOKEN')
        newWorkspace = '/home'
        
        FORTIFY_APP_NAME = "Scancentral_DEV"
        FORTIFY_APP_VERSION = "Scancentral_v1"
        FORTIFY_SOURCE_CODE_PATH = "$WORKSPACE/app"
        FORTIFY_FPR_FILE = "devopscoe-javascan.fpr"
        FORTIFY_URL = ""
        FORTIFY_ADDITIONAL_PARAMS = "-exclude \"**/test/*\" -logfile 'translation.log'"
    }
    stages {
        stage('build') {
            steps {
                echo 'build'
                dir("app") {
                    git url: "", credentialsId: ""
                }
            }
        }
        stage('fortify appsec') {
            steps {
                script {
                    echo 'fortify'
                    dir("appsec-scripts") {
                        git url: "", branch: "master", credentialsId: ""
                    }
                    def fortifyCommands = """
                        chmod +x appsec-scripts/fortify/fortify.sh
                        fortify.sh \\
                        --fortify.app.name="${FORTIFY_APP_NAME}" \\
                        --fortify.app.version="${FORTIFY_APP_VERSION}" \\
                        --fortify.source.code.path="${FORTIFY_SOURCE_CODE_PATH}" \\
                        --fortify.fpr.file="${FORTIFY_FPR_FILE}" \\
                        --fortify.client.api.key="${Fortify_Upload_Token}" \\
                        --fortify.client.user.token="${FORTIFY_DEV_USER_TOKEN}" \\
                        --fortify.client.api.key.download="${Fortify_Download_Token}" \\
                        --fortify.url="${FORTIFY_URL}" \\
                        --fortify.additional.params="${FORTIFY_ADDITIONAL_PARAMS}"
                    """
                    sh(script: fortifyCommands)
                }
            }
        }
    }
}
