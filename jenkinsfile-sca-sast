pipeline {
    agent { label 'Azure_linux' }
    environment {
        PATH = "/opt/Fortify/Fortify_SCA_and_Apps_24.2.0/bin/:$PATH"
        Fortify_Upload_Token     = credentials('Fortify_Upload_Token_DEV')
        Fortify_Download_Token = credentials('	Fortify_Download_Token_DEV')
        BD_TOKEN = credentials('TOKEN')

        newWorkspace = '/home/'
    }
    stages {
        stage('change Workspace directory') {
            steps {
                script {
                    ws(newWorkspace) {
                        sh 'pwd'
                        sh 'ls'
                        dir("app") {
                             git url: "", credentialsId: ""
                        }
                        
                    }
                }
            }
        }
        stage('build') {
            steps {
                echo 'build'
                dir("app") {
                    git url: "", credentialsId: ""
                }
                
            }
        }
        stage('blackduck appsec') {
            steps {
              script{
                echo 'blackduck'
                dir("appsec-scripts") {
                    git url: "", branch: "purgeps", credentialsId: ""
                }
                def blackduckResult = ""
                def blackduckError = ""
                def blackduckExitStatus = 0
                def blackduckOutputFile = "output.txt"
                def blackDuckCommands = """
                   # cd appsec-scripts/blackduck;
                
                   # set executable permissions;
                #chmod +x blackduck.sh;
                
                    # execute script;
                    bash blackduck.sh \
                    --blackduck.project.name="TestProject_DEV"\
                    --blackduck.project.version="TestScan_001_DEV" \
                    --blackduck.detect.path.jar="appsec-scripts/blackduck" \
                    --blackduck.source.code.path="$WORKSPACE/app" \
                    --blackduck.url="" \
                    --blackduck.client.api.key="${BD_TOKEN}" \
                    --blackduck.trust.cert=true \
                    --detect.policy.check.fail.on.severities=CRITICAL \
                    --detect.detector.search.exclusion.defaults="true" 
                                """
                    sh(script: blackDuckCommands)
                   
               
              }
            }   
        }
    }
    
}


pipeline {
    agent { label '' }
    environment {
        Fortify_Upload_Token     = credentials('Fortify_Upload_Token_DEV')
        Fortify_Download_Token = credentials('Fortify_Download_Token_DEV')
        BD_TOKEN = credentials('BD_DEV_TOKEN')
        FORTIFY_DEV_USER_TOKEN = credentials('FORTIFY_DEV_USER_TOKEN')
        newWorkspace = '/home'
    }
    stages {
        stage('build') {
            steps {
                echo 'build'
                dir("app") {
                    git url: "", credentialsId: ""
                }
                
            }
        }
        stage('fortify appsec') {
            steps {
              script{
                echo 'fortify'
                dir("appsec-scripts") {
                    git url: "", branch: "master", credentialsId: ""
                }
                def fortifyResult = ""
                def fortifyError = ""
                def fortifyExitStatus = 0
                def fortifyOutputFile = "output.txt"
                def fortifyCommands = """
                   #cd appsec-scripts/fortify;
                
                   # set executable permissions;
                   chmod +x appsec-scripts/fortify/fortify.sh;
                
                    # execute script;
                  fortify.sh \
                  --fortify.app.name="Scancentral_DEV" \
                  --fortify.app.version="Scancentral_v1" \
                  --fortify.source.code.path="$WORKSPACE/app" \
                  --fortify.fpr.file="devopscoe-javascan.fpr" \
                  --fortify.client.api.key="${Fortify_Upload_Token}" \
                  --fortify.client.user.token="${FORTIFY_DEV_USER_TOKEN}  " \
                  --fortify.client.api.key.download="${Fortify_Download_Token}" \
                  --fortify.url="" \
                  --fortify.additional.params="-exclude \"**/test/*\" -logfile "translation.log""
                                   """
                sh(script: fortifyCommands)
                   

                
                }
              }
            }   
        }
    }
